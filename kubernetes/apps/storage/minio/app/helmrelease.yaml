---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app minio
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2025-04-08T15-41-24Z
            env:
              MINIO_UPDATE: "off"
              MINIO_BROWSER_REDIRECT_URL: "https://minio.narden.au"
              MINIO_SERVER_URL: "https://s3.narden.au"
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.narden.au,https://s3.narden.au
              #MINIO_PROMETHEUS_JOB_ID: minio
              #MINIO_PROMETHEUS_URL: http://vmsingle-stack.observability.svc:8429
              #MINIO_PROMETHEUS_AUTH_TYPE: public
            envFrom:
              - secretRef:
                  name: minio-secret
            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes

    service:
      minio:
        controller: minio
        #ports:
          #http:
            #port: port-console
          #api:
          #  port: *port-api

    ingress:
      minio:
        className: internal
        hosts:
          - host: minio.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: minio
                  #port: &port-console 9001

        #tls:
         # - hosts:
          #     - *host-console

      s3:
        className: internal
        hosts:
          - host: s3.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: minio
                  #port: &port-api 9000


    persistence:
      config:
        existingClaim: minio-nfs
        globalMounts:
          - path: /data
